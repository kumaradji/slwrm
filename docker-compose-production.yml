version: "3.9"

networks:
  soulwarm:
  traefik-public:
    external: true

services:
  backend:
    image: ${REGISTRY}/backend:${IMAGE_TAG}
    networks:
      - soulwarm
      - traefik-public
    volumes:
      - django_static:/app/backend/static
      - django_media:/app/backend/media
    environment:
      APP_ENV: production
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_ADMIN_USER: ${DJANGO_ADMIN_USER}
      DJANGO_ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      GENERAL_TELEGRAM_BOT_TOKEN: ${GENERAL_TELEGRAM_BOT_TOKEN}
      GENERAL_TELEGRAM_CHAT_ID: ${GENERAL_TELEGRAM_CHAT_ID}
      DATABASE: ${DATABASE}
      DB_ENGINE: ${DB_ENGINE}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    command: gunicorn soulwarm.wsgi:application --bind 0.0.0.0:8000
    deploy:
      placement:
        constraints: [ node.role == manager ]

  db:
    image: ${REGISTRY}/db:${IMAGE_TAG}
    networks:
      - soulwarm
      - traefik-public
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    deploy:
      placement:
        constraints: [ node.role == manager ]
      endpoint_mode: dnsrr

  react:
    image: ${REGISTRY}/react:${IMAGE_TAG}
    networks:
      - soulwarm
      - traefik-public
    volumes:
      - react_build:/app/frontend/build
    command: serve -s build -l 3000
    deploy:
      placement:
        constraints: [ node.role == manager ]

  nginx:
    image: ${REGISTRY}/nginx:${IMAGE_TAG}
    networks:
      - soulwarm
      - traefik-public
    volumes:
      - django_static:/app/backend/static
      - django_media:/app/backend/media
      - react_build:/app/frontend/build
    deploy:
      placement:
        constraints: [ node.role == manager ]
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.nginx.rule=Host(`koltsovaecoprint.ru`) || Host(`www.koltsovaecoprint.ru`)
        - traefik.http.services.nginx.loadBalancer.server.port=80
        - traefik.http.middlewares.nginx-redirect.redirectRegex.regex=^(https?://)www.koltsovaecoprint.ru/(.*)$$
        - traefik.http.middlewares.nginx-redirect.redirectRegex.replacement=$${1}koltsovaecoprint.ru/$${2}
        - traefik.http.middlewares.nginx-redirect.redirectRegex.permanent=true
        - traefik.http.routers.nginx.middlewares=nginx-redirect,secure-headers
        - traefik.http.routers.nginx.entryPoints=https
        - traefik.http.routers.nginx.tls=true
        - traefik.http.routers.nginx.tls.certResolver=letsEncrypt

volumes:
  postgres_data:
  django_static:
  django_media:
  react_build: